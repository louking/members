"""User.fs_uniquifier not nullable, initialize value

Revision ID: 94dd1ac233dd
Revises: 6e7d50e2ade9
Create Date: 2021-01-13 11:05:58.172565

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '94dd1ac233dd'
down_revision = '6e7d50e2ade9'
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()





def upgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def upgrade_users():
    # update existing rows with unique fs_uniquifier
    import uuid
    user_table = sa.Table('user', sa.MetaData(), sa.Column('id', sa.Integer, primary_key=True),
                          sa.Column('fs_uniquifier', sa.String))
    conn = op.get_bind()
    for row in conn.execute(sa.select([user_table.c.id, user_table.c.fs_uniquifier])):
        if row['fs_uniquifier'] == None:
            conn.execute(user_table.update().values(fs_uniquifier=uuid.uuid4().hex).where(user_table.c.id == row['id']))

    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user', 'fs_uniquifier',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
    # ### end Alembic commands ###

def downgrade_users():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user', 'fs_uniquifier',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
    # ### end Alembic commands ###

